services:
  api: &main_app
    build:
      context: .
      dockerfile: ./Dockerfile
    image: insurance_calc:${INSURANCE_CALC_VERSION:-latest}
    restart: always
    volumes:
    - .:/app/src/
    ports:
      - ${INSURANCE_CALC_PORT}:${INSURANCE_CALC_PORT}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  db:
    image: postgres:17.2-alpine
    hostname: insurance-calc-db
    container_name: insurance-calc-db
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${INSURANCE_CALC_DB_PASS} 
      POSTGRES_USER: ${INSURANCE_CALC_DB_USER}
      POSTGRES_DB: ${INSURANCE_CALC_DB_BASE}
      PGPORT: ${INSURANCE_CALC_DB_PORT}
    volumes:
      - insurance-calc-db-data:/var/lib/postgresql/data
    ports:
      - ${INSURANCE_CALC_DB_PORT}:${INSURANCE_CALC_DB_PORT}
    restart: always
    healthcheck:
      test: pg_isready -d ${INSURANCE_CALC_DB_BASE}
      interval: 2s
      timeout: 3s
      retries: 40

  redis:
    image: redis:alpine
    hostname: "insurance-calc-redis"
    container_name: insurance-calc-redis
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: redis-cli ping
      interval: 2s
      timeout: 3s
      retries: 40

  kafka:
    image: bitnami/kafka:3.9-debian-12
    hostname: "insurance-calc-kafka"
    container_name: insurance-calc-kafka
    restart: always
    environment:
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@insurance-calc-kafka:9093"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092
      interval: 2s
      timeout: 3s
      retries: 40



volumes:
  insurance-calc-db-data:
    name: insurance-calc-db-data
